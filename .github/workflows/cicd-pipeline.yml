name: Build, Lint, Test and Deploy co2m.js
#on:
#  push:
#    branches:
#      - "master"
#  pull_request:
#    branches:
#      - "master"
on:
  push:
    branches:
      - "**"
  pull_request:
    types:
      - closed
    branches:
      - master
jobs:
  eslint:
    name: Check Syntax with ESLint
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout code style
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }} to check Lint
        uses: actions/setup-node@v4
        with:
          always-auth: 'false'
          cache: 'npm'
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  buildDist:
    name: Build-to-JS
    needs: [eslint, tests]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        arch:
          - x64
          - x86
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js 18.x to run build dist on ${{ matrix.arch }}
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          node-version: ${{ matrix.node-version}}
      - name: Install dependencies
        run: npm ci
      - name: Run Build Dist
        run: npm run build

  tests:
    name: Run Tests
    needs: eslint
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }} to run Tests Covering
        uses: actions/setup-node@v4
        with:
          always-auth: 'false'
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests Command (Jest-CI)
        run: npm test

  publish-lib-npmjs:
    name: Deploy library on npmjs.com
    needs:
      - tests
      - buildDist
    runs-on: ubuntu-22.04
    if: github.event.pull_request == true && github.event.pull_request.base.ref == 'maste'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js 18x to run Tests
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Update package.json - patching version
        run: |
          curr_version=$(jq -r .version < package.json)
          echo "The current version is $curr_version"
          npm version patch
          next_version=$(jq -r .version < package.json)
          echo "The next version is $next_version"
          git add package.json
          git commit -m "Patching version to $next_version"
          git push origin master
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ORG_ACCESS_TOKEN }}
        run: npm publish
#      - name: Create Github Release
#        if: startsWith(github.red, 'ref/tags/')
#        uses: softprops/action-gh-release@v1
#        with:
#          files: |
#            dist/*.tgz