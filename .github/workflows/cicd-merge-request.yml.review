name: "Pipeline to path version"
on:
  pull_request:
    types:
      - closed
    branches:
      - master

jobs:
  MR_if-merged:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: "run test"
        run: echo "MR merged"
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "The PR was successfully merged."

  if_merge_closed:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "if_merge_closed"

  if_merge_open:
    if: github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "if_merge_closed"

  if_event_name_pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "if_event_name_pr"

  publish-lib-npmjs:
    name: Deploy library on npmjs.com
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
#      - name: Download Dist Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: dist-artifact
#          path: dist
      - name: Use Node.js 18x to run Tests
        uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org/'
          node-version: 18.x
          cache: "npm"
      - name: Install Dependencies
        run: |
          npm ci
          npm run build
      - name: Update package.json - patching version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ORG_ACCESS_TOKEN }}
        run: |
          git pull --rebase origin master
          git config --local user.name "github-actions[bot]"
          git config --local user.email "33054249+nivekalara237@users.noreply.github.com"
          curr_version=$(jq -r .version < package.json)
          echo "*****The current version is $curr_version*****"
          next_version=$(npm version patch --no-commit-hooks --no-git-tag-version)
          echo "*****The next version is $next_version*****"
          git add .
          git commit -m "Patching version to $next_version"
      - name: Push changes
        env:
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
          PAT: ${{ secrets.PAT_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git push "https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:master
#      - name: Push the version change
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          branch: master